@startuml
'https://plantuml.com/sequence-diagram

autonumber
hide footbox

actor "WareHouse Employee" as ator
participant ChangeOrderStatusUI as orderStatusUI <<presentation>>
participant OrderStatusController as changeOrderController <<application>>
participant PersistenceContext as persistence <<persistence>>
participant RepositoryFactory as factory <<factory>>
database ProductOrderRepository as productOrderRepo <<repository>>
participant "order:ProductOrder" as costumerOrder

activate ator

ator -> orderStatusUI: Wants to change the status of the order
activate orderStatusUI
orderStatusUI -> changeOrderController: preparedOrders()
activate changeOrderController
changeOrderController -> persistence: repositories()
activate persistence
persistence -> factory: create()
activate factory
deactivate factory
deactivate persistence
changeOrderController --> orderStatusUI: Iterable<ProductOrderDTO>
deactivate changeOrderController
orderStatusUI --> ator: Show orders and requests the order ID
deactivate orderStatusUI
ator -> orderStatusUI: Inserts the order ID
activate orderStatusUI
orderStatusUI -> changeOrderController: changeStatusToDispatched(productOrderID)
activate changeOrderController
changeOrderController -> productOrderRepo: findByOrderId(id)
activate productOrderRepo
productOrderRepo --> changeOrderController: order
deactivate productOrderRepo
changeOrderController -> costumerOrder: changeStatusTo(ProductOrder.Status.DISPATCHED_FOR_CUSTOMER_DELIVERY);
activate costumerOrder
deactivate costumerOrder
changeOrderController -> productOrderRepo: save(order)
activate productOrderRepo
deactivate productOrderRepo
changeOrderController --> orderStatusUI
deactivate changeOrderController
orderStatusUI --> ator: Informs Success
deactivate ator





@enduml